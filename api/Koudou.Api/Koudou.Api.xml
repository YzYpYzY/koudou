<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Koudou.Api</name>
    </assembly>
    <members>
        <member name="P:Koudou.Models.Base.BaseDTO`2.ValidationErrors">
            <summary>
            Contains the list of validation errors when the DTO is invalid.
            </summary>
        </member>
        <member name="M:Koudou.Models.Base.BaseDTO`2.FromEntity(`0)">
            <summary>
            Converts an entity of type TEntity into a DTO of type TDTO
            </summary>
            <param name="entity">The entity to convert</param>
            <returns>A DTO of type TDTO</returns>
        </member>
        <member name="M:Koudou.Models.Base.BaseDTO`2.IsValid">
            <summary>
            Returns whether the object is considered as valid, following the rules defined in Validate() method.
            If the object is NOT valid, the list of validation errors can be found in ValidationErrors property.
            </summary>
            <returns>A boolean value indicating whether the object is valid or not.</returns>
        </member>
        <member name="M:Koudou.Models.Base.BaseDTO`2.ValidateStringNotEmpty(System.String,System.String)">
            <summary>
             Validates the input string is not null or empty
            </summary>
            <param name="propertyName">The name of the property to test</param>
            <param name="value">The value of the property to test</param>
        </member>
        <member name="M:Koudou.Models.Base.BaseDTO`2.ValidateStringIsEmail(System.String,System.String)">
            <summary>
            Validates the input string is a valid email address
            See https://lonewolfonline.net/validate-email-addresses/
            </summary>
            <param name="propertyName">The name of the property to test</param>
            <param name="value">The value of the property to test</param>
        </member>
        <member name="P:Koudou.Models.Base.PagedRequestOptions.StartIndex">
            <summary>
            The index on which to start the paging (correspond to the amount of items to skip)
            </summary>
            <value>Default: 0</value>
        </member>
        <member name="P:Koudou.Models.Base.PagedRequestOptions.Count">
            <summary>
            The amount of items to retrieve in one call. A value lower than or equal to 0 indicates all records must be fetched.
            </summary>
            <value>Default: 20</value>
        </member>
        <member name="P:Koudou.Models.Base.PagedRequestOptions.Sort">
            <summary>
            The field on which the sort function must be applied
            </summary>
        </member>
        <member name="P:Koudou.Models.Base.PagedRequestOptions.SortDirection">
            <summary>
            The sort direction (ASC or DESC)
            </summary>
            <value>Default: ASC</value>
        </member>
    </members>
</doc>
